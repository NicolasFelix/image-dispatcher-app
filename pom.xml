<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fr.perso.nfelix</groupId>
  <artifactId>image-dispatcher-app</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <organization>
    <name>LouMÃ©ou Corporation</name>
  </organization>

  <properties>
    <lombok.version>1.16.18</lombok.version>
    <controlsfx.version>8.40.13</controlsfx.version>
    <springframework.version>4.3.10.RELEASE</springframework.version>
    <spring.security.version>4.2.3.RELEASE</spring.security.version>
    <slf4j.version>1.7.25</slf4j.version>
    <logback.version>1.2.3</logback.version>
    <janino.version>3.0.7</janino.version>

    <!-- maven compiler plugin is define into parent -->
    <jdk.version>1.8</jdk.version>
    <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>dd/MM/yyyy-HH:mm:ss</maven.build.timestamp.format>
    <maven.findbugs.plugin.version>3.0.5-SNAPSHOT</maven.findbugs.plugin.version>
    <maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version>
    <maven.reports.plugin.version>2.9</maven.reports.plugin.version>
    <maven.javadoc.plugin.version>2.10.4</maven.javadoc.plugin.version>

    <!--<kotlin.version>1.0.3</kotlin.version>-->
    <thymeleaf.version>3.0.7.RELEASE</thymeleaf.version>

    <javafx-maven-plugin.version>8.8.3</javafx-maven-plugin.version>
    <jre.runtime.path>C:\Program Files\Java\jre1.8.0_111</jre.runtime.path>

    <commons-lang3.version>3.6</commons-lang3.version>
    <commons-configuration2.version>2.1.1</commons-configuration2.version>
    <commons-io.version>2.5</commons-io.version>
    <commons-beanutils.version>1.9.3</commons-beanutils.version>
    <commons-cli.version>1.4</commons-cli.version>

    <!--<svnkit.version>1.8.14</svnkit.version>-->
    <metadata-extractor.version>2.10.1</metadata-extractor.version>

  </properties>

  <build>
    <extensions>
      <extension>
        <groupId>com.digitech.commons</groupId>
        <artifactId>build-tools</artifactId>
        <version>1.0-SNAPSHOT</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <!-- findbugs -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${maven.findbugs.plugin.version}</version>
        </plugin>

        <!-- checkstyle -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven.checkstyle.plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.0</version>
            </dependency>
            <dependency>
              <groupId>org.slf4j</groupId>
              <artifactId>jcl-over-slf4j</artifactId>
              <version>${slf4j.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- report plugin-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven.reports.plugin.version}</version>
        </plugin>

        <!-- javadoc -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <findbugsXmlOutput>true</findbugsXmlOutput>
          <xmlOutput>true</xmlOutput>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <!-- addkotlin compiler -->
      <!--<plugin>
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/main/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/main/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>-->

      <!-- as kotlin compiler is on, redefine  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/app*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>src/main/resources/digitech_checkstyle.xml</configLocation>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>cim</report>
              <report>issue-tracking</report>
              <report>scm</report>
              <report>plugin-management</report>
              <report>summary</report>
              <report>dependency-convergence</report>
              <report>dependency-management</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <dependencies>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-configuration2</artifactId>
      <version>${commons-configuration2.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>${commons-beanutils.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons-cli.version}</version>
    </dependency>

    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
      <version>${thymeleaf.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${springframework.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${spring.security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.controlsfx</groupId>
      <artifactId>controlsfx</artifactId>
      <version>${controlsfx.version}</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--
        <dependency>
          <groupId>org.tmatesoft.svnkit</groupId>
          <artifactId>svnkit</artifactId>
          <version>${svnkit.version}</version>
        </dependency>
    -->

    <dependency>
      <groupId>com.drewnoakes</groupId>
      <artifactId>metadata-extractor</artifactId>
      <version>${metadata-extractor.version}</version>
    </dependency>

    <!-- LOGGING -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>${janino.version}</version>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <profiles>

    <!-- userguide -->
    <profile>
      <id>userguideModule</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>userguideModule</name>
          <value>true</value>
        </property>
      </activation>

      <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <highlight.engine>highlightjs</highlight.engine>

        <asciidoctor.maven.plugin.version>1.5.5</asciidoctor.maven.plugin.version>
        <asciidocj.pdf.version>1.5.0-alpha.15</asciidocj.pdf.version>
        <jruby.version>9.1.12.0</jruby.version>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>${asciidoctor.maven.plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-pdf</artifactId>
                <version>${asciidocj.pdf.version}</version>
              </dependency>
              <!-- Comment this section to use the default jruby artifact provided by the plugin -->
              <dependency>
                <groupId>org.jruby</groupId>
                <artifactId>jruby-complete</artifactId>
                <version>${jruby.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <!--<sourceHighlighter>${highlight.engine}</sourceHighlighter>-->
              <!-- Attributes common to all output formats -->
              <attributes>
                <numbered>true</numbered>
                <sourcedir>${project.build.sourceDirectory}</sourcedir>
                <pagenums/>
                <toc2/>
                <idprefix/>
                <icons>font</icons>
                <data-uri/>
                <idseparator>-</idseparator>
                <docinfo>true</docinfo>
                <setanchors>true</setanchors>
                <toc-title>Sommaire</toc-title>
                <last-update-label>false</last-update-label>
                <compact>true</compact>
              </attributes>
            </configuration>
            <executions>
              <execution>
                <id>generate-html5-exchangeAppDoc</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <sourceDirectory>${basedir}/src/adocs/img-dispatcher</sourceDirectory>
                  <backend>html5</backend>
                  <embedded>true</embedded>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- windows package -->
    <profile>
      <id>windows-package</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>windows-package</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.zenjava</groupId>
            <artifactId>javafx-maven-plugin</artifactId>
            <version>${javafx-maven-plugin.version}</version>
            <configuration>
              <verbose>true</verbose>
              <needShortcut>true</needShortcut>
              <mainClass>fr.perso.nfelix.image.ImgDispatcherApp</mainClass>
              <bundler>EXE</bundler>
              <!--<bundler>windows.app</bundler>-->
              <appName>ImgDispatcherApp</appName>
              <additionalAppResources>${basedir}/src/assembly</additionalAppResources>
              <jfxMainAppJarName>${project.build.finalName}.jar</jfxMainAppJarName>
              <!--<skipNativeLauncherWorkaround124>true</skipNativeLauncherWorkaround124>-->
              <jvmArgs>
                <jvmArg>-Xmx512M</jvmArg>
                <!--<jvmArgs>-Dfile.encoding=UTF8</jvmArgs>-->
              </jvmArgs>
              <bundleArguments>
                <installdirChooser>true</installdirChooser>
                <runtime>${jre.runtime.path}</runtime>
              </bundleArguments>
            </configuration>

            <executions>
              <execution>
                <!-- required before build-native -->
                <id>create-jfxjar</id>
                <phase>package</phase>
                <goals>
                  <goal>build-jar</goal>
                </goals>
              </execution>
              <execution>
                <id>create-native</id>
                <phase>package</phase>
                <goals>
                  <goal>build-native</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
